// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Juliapos.Portal.ProductsApi.Models
{
    /// <summary>
    /// DTO to update a product
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ProductUpdateDto : IParsable
    {
        /// <summary>Stock goes up on use (coffee machine counter)</summary>
        public bool? AscendingStock { get; set; }
        /// <summary>Product code</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Code { get; set; }
#nullable restore
#else
        public string Code { get; set; }
#endif
        /// <summary>Custom attributes</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Juliapos.Portal.ProductsApi.Models.ProductCustomAttributeDto>? CustomAttributes { get; set; }
#nullable restore
#else
        public List<global::Juliapos.Portal.ProductsApi.Models.ProductCustomAttributeDto> CustomAttributes { get; set; }
#endif
        /// <summary>Long description</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Dust category</summary>
        public Guid? DustCategoryId { get; set; }
        /// <summary>Should be included in inventory</summary>
        public bool? InInventory { get; set; }
        /// <summary>Menu category</summary>
        public Guid? MenuCategoryId { get; set; }
        /// <summary>Alternative name on menu</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MenuName { get; set; }
#nullable restore
#else
        public string MenuName { get; set; }
#endif
        /// <summary>Product name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Amount of softdrugs for use in stock measurement</summary>
        public float? Percentage { get; set; }
        /// <summary>Product category</summary>
        public Guid? ProductCategoryId { get; set; }
        /// <summary>Selection pages</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Juliapos.Portal.ProductsApi.Models.ProductSelectionPageReferenceDto>? SelectionPages { get; set; }
#nullable restore
#else
        public List<global::Juliapos.Portal.ProductsApi.Models.ProductSelectionPageReferenceDto> SelectionPages { get; set; }
#endif
        /// <summary>The state property</summary>
        public global::Juliapos.Portal.ProductsApi.Models.RecordState? State { get; set; }
        /// <summary>Variations</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Juliapos.Portal.ProductsApi.Models.ProductVariationUpdateDto>? Variations { get; set; }
#nullable restore
#else
        public List<global::Juliapos.Portal.ProductsApi.Models.ProductVariationUpdateDto> Variations { get; set; }
#endif
        /// <summary>The vatLevel property</summary>
        public global::Juliapos.Portal.ProductsApi.Models.VatLevel? VatLevel { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Juliapos.Portal.ProductsApi.Models.ProductUpdateDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Juliapos.Portal.ProductsApi.Models.ProductUpdateDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Juliapos.Portal.ProductsApi.Models.ProductUpdateDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "ascendingStock", n => { AscendingStock = n.GetBoolValue(); } },
                { "code", n => { Code = n.GetStringValue(); } },
                { "customAttributes", n => { CustomAttributes = n.GetCollectionOfObjectValues<global::Juliapos.Portal.ProductsApi.Models.ProductCustomAttributeDto>(global::Juliapos.Portal.ProductsApi.Models.ProductCustomAttributeDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "dustCategoryId", n => { DustCategoryId = n.GetGuidValue(); } },
                { "inInventory", n => { InInventory = n.GetBoolValue(); } },
                { "menuCategoryId", n => { MenuCategoryId = n.GetGuidValue(); } },
                { "menuName", n => { MenuName = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "percentage", n => { Percentage = n.GetFloatValue(); } },
                { "productCategoryId", n => { ProductCategoryId = n.GetGuidValue(); } },
                { "selectionPages", n => { SelectionPages = n.GetCollectionOfObjectValues<global::Juliapos.Portal.ProductsApi.Models.ProductSelectionPageReferenceDto>(global::Juliapos.Portal.ProductsApi.Models.ProductSelectionPageReferenceDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "state", n => { State = n.GetEnumValue<global::Juliapos.Portal.ProductsApi.Models.RecordState>(); } },
                { "variations", n => { Variations = n.GetCollectionOfObjectValues<global::Juliapos.Portal.ProductsApi.Models.ProductVariationUpdateDto>(global::Juliapos.Portal.ProductsApi.Models.ProductVariationUpdateDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "vatLevel", n => { VatLevel = n.GetEnumValue<global::Juliapos.Portal.ProductsApi.Models.VatLevel>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("ascendingStock", AscendingStock);
            writer.WriteStringValue("code", Code);
            writer.WriteCollectionOfObjectValues<global::Juliapos.Portal.ProductsApi.Models.ProductCustomAttributeDto>("customAttributes", CustomAttributes);
            writer.WriteStringValue("description", Description);
            writer.WriteGuidValue("dustCategoryId", DustCategoryId);
            writer.WriteBoolValue("inInventory", InInventory);
            writer.WriteGuidValue("menuCategoryId", MenuCategoryId);
            writer.WriteStringValue("menuName", MenuName);
            writer.WriteStringValue("name", Name);
            writer.WriteFloatValue("percentage", Percentage);
            writer.WriteGuidValue("productCategoryId", ProductCategoryId);
            writer.WriteCollectionOfObjectValues<global::Juliapos.Portal.ProductsApi.Models.ProductSelectionPageReferenceDto>("selectionPages", SelectionPages);
            writer.WriteEnumValue<global::Juliapos.Portal.ProductsApi.Models.RecordState>("state", State);
            writer.WriteCollectionOfObjectValues<global::Juliapos.Portal.ProductsApi.Models.ProductVariationUpdateDto>("variations", Variations);
            writer.WriteEnumValue<global::Juliapos.Portal.ProductsApi.Models.VatLevel>("vatLevel", VatLevel);
        }
    }
}
#pragma warning restore CS0618
