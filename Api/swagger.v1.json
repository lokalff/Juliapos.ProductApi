{
  "swagger": "2.0",
  "info": {
    "title": "Portal Product Api",
    "description": "The Portal Product API allows operations to manage products. v1.0",
    "version": "1.0"
  },
  "paths": {
    "/api/v1/customattributes": {
      "get": {
        "tags": [
          "CustomAttributes"
        ],
        "summary": "Get custom attributes",
        "operationId": "GetCustomAttributesAsync",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the custom attributes.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomAttributeDto"
              }
            }
          },
          "400": {
            "description": "Returned when request can not be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "CustomAttributes"
        ],
        "summary": "Create a new custom attribute",
        "operationId": "CreateCustomAttributeAsync",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomAttributeAddDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the new custom attribute.",
            "schema": {
              "$ref": "#/definitions/CustomAttributeDto"
            }
          },
          "409": {
            "description": "Returned when there is a conflict with another custom attribute.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/api/v1/customattributes/{id}": {
      "get": {
        "tags": [
          "CustomAttributes"
        ],
        "summary": "Get custom attribute with id as parameter",
        "operationId": "GetCustomAttributeByIdAsync",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the custom attribute.",
            "schema": {
              "$ref": "#/definitions/CustomAttributeDto"
            }
          },
          "404": {
            "description": "Returned when the custom attribute was not found.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "400": {
            "description": "Returned when request can not be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "CustomAttributes"
        ],
        "summary": "Update a custom attribute",
        "operationId": "UpdateCustomAttributeAsync",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomAttributeUpdateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the custom attribute.",
            "schema": {
              "$ref": "#/definitions/CustomAttributeDto"
            }
          },
          "404": {
            "description": "Returned when the custom attribute was not found.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "409": {
            "description": "Returned when there is a conflict with another custom attribute.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "CustomAttributes"
        ],
        "summary": "Delete a custom attribute",
        "operationId": "DeleteCustomAttributeAsync",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the deleted custom attribute.",
            "schema": {
              "$ref": "#/definitions/CustomAttributeDto"
            }
          },
          "409": {
            "description": "Returned when the custom attribute is in use.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/api/v1/dustcategories": {
      "get": {
        "tags": [
          "DustCategories"
        ],
        "summary": "Get dust categories",
        "operationId": "GetDustCategoriesAsync",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the dust category.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DustCategoryDto"
              }
            }
          },
          "400": {
            "description": "Returned when request can not be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "DustCategories"
        ],
        "summary": "Create a new dust category",
        "operationId": "CreateDustCategoryAsync",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DustCategoryAddDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the new dust category.",
            "schema": {
              "$ref": "#/definitions/DustCategoryDto"
            }
          },
          "409": {
            "description": "Returned when there is a conflict with another dust category.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/api/v1/dustcategories/{id}": {
      "get": {
        "tags": [
          "DustCategories"
        ],
        "summary": "Get dust category with id as parameter",
        "operationId": "GetDustCategoryByIdAsync",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the dust category.",
            "schema": {
              "$ref": "#/definitions/DustCategoryDto"
            }
          },
          "404": {
            "description": "Returned when the dust category was not found.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "400": {
            "description": "Returned when request can not be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "DustCategories"
        ],
        "summary": "Update a dust category",
        "operationId": "UpdateDustCategoryAsync",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DustCategoryUpdateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the dust category.",
            "schema": {
              "$ref": "#/definitions/DustCategoryDto"
            }
          },
          "404": {
            "description": "Returned when the dust category was not found.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "409": {
            "description": "Returned when there is a conflict with another dust category.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "DustCategories"
        ],
        "summary": "Delete a menu category",
        "operationId": "DeleteDustCategoryAsync",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the deleted dust category.",
            "schema": {
              "$ref": "#/definitions/DustCategoryDto"
            }
          },
          "409": {
            "description": "Returned when the category is not empty.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/api/v1/menucategories": {
      "get": {
        "tags": [
          "MenuCategories"
        ],
        "summary": "Get menu categories",
        "operationId": "GetMenuCategoriesAsync",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the menu category.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MenuCategoryDto"
              }
            }
          },
          "400": {
            "description": "Returned when request can not be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "MenuCategories"
        ],
        "summary": "Create a new menu category",
        "operationId": "CreateMenuCategoryAsync",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/MenuCategoryAddDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the new menu category.",
            "schema": {
              "$ref": "#/definitions/MenuCategoryDto"
            }
          },
          "409": {
            "description": "Returned when there is a conflict with another menu category.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/api/v1/menucategories/{id}": {
      "get": {
        "tags": [
          "MenuCategories"
        ],
        "summary": "Get menu category with id as parameter",
        "operationId": "GetMenuCategoryByIdAsync",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the menu category.",
            "schema": {
              "$ref": "#/definitions/MenuCategoryDto"
            }
          },
          "404": {
            "description": "Returned when the menu category was not found.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "400": {
            "description": "Returned when request can not be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "MenuCategories"
        ],
        "summary": "Update a menu category",
        "operationId": "UpdateMenuCategoryAsync",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/MenuCategoryUpdateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the menu category.",
            "schema": {
              "$ref": "#/definitions/MenuCategoryDto"
            }
          },
          "404": {
            "description": "Returned when the menu category was not found.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "409": {
            "description": "Returned when there is a conflict with another menu category.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "MenuCategories"
        ],
        "summary": "Delete a menu category",
        "operationId": "DeleteMenuCategoryAsync",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the deleted menu category.",
            "schema": {
              "$ref": "#/definitions/MenuCategoryDto"
            }
          },
          "409": {
            "description": "Returned when the category is not empty.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/api/v1/productcategories": {
      "get": {
        "tags": [
          "ProductCategories"
        ],
        "summary": "Get product categories",
        "operationId": "GetProductCategoriesAsync",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the product category.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductCategoryDto"
              }
            }
          },
          "400": {
            "description": "Returned when request can not be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "ProductCategories"
        ],
        "summary": "Create a new product category",
        "operationId": "CreateProductCategoryAsync",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductCategoryAddDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the new product category.",
            "schema": {
              "$ref": "#/definitions/ProductCategoryDto"
            }
          },
          "409": {
            "description": "Returned when there is a conflict with another product category.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/api/v1/productcategories/{id}": {
      "get": {
        "tags": [
          "ProductCategories"
        ],
        "summary": "Get product category with id as parameter",
        "operationId": "GetProductCategoryByIdAsync",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the product category.",
            "schema": {
              "$ref": "#/definitions/ProductCategoryDto"
            }
          },
          "404": {
            "description": "Returned when the product category was not found.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "400": {
            "description": "Returned when request can not be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "ProductCategories"
        ],
        "summary": "Update a product category",
        "operationId": "UpdateProductCategoryAsync",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductCategoryUpdateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the product category.",
            "schema": {
              "$ref": "#/definitions/ProductCategoryDto"
            }
          },
          "404": {
            "description": "Returned when the product category was not found.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "409": {
            "description": "Returned when there is a conflict with another product category.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ProductCategories"
        ],
        "summary": "Delete a product category",
        "operationId": "DeleteProductCategoryAsync",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the deleted product category.",
            "schema": {
              "$ref": "#/definitions/ProductCategoryDto"
            }
          },
          "409": {
            "description": "Returned when the category is not empty.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/api/v1/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get products",
        "operationId": "GetProductsAsync",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the product.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductDto"
              }
            }
          },
          "400": {
            "description": "Returned when request can not be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a new product",
        "operationId": "CreateProductAsync",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductAddDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the new product.",
            "schema": {
              "$ref": "#/definitions/ProductDto"
            }
          },
          "409": {
            "description": "Returned when there is a conflict with another product.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/api/v1/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get product with id as parameter",
        "operationId": "GetProductByIdAsync",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the product.",
            "schema": {
              "$ref": "#/definitions/ProductDto"
            }
          },
          "404": {
            "description": "Returned when the product was not found.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "400": {
            "description": "Returned when request can not be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update a product",
        "operationId": "UpdateProductAsync",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductUpdateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the product.",
            "schema": {
              "$ref": "#/definitions/ProductDto"
            }
          },
          "404": {
            "description": "Returned when the product was not found.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "409": {
            "description": "Returned when there is a conflict with another product.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a prouct",
        "operationId": "DeleteProductAsync",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "purgeProduct",
            "description": "",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the deleted product.",
            "schema": {
              "$ref": "#/definitions/ProductDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/api/v1/selectionpages": {
      "get": {
        "tags": [
          "SelectionPages"
        ],
        "summary": "Get product selection pages",
        "operationId": "GetSelectionPagesAsync",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the product selection page.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SelectionPageDto"
              }
            }
          },
          "400": {
            "description": "Returned when request can not be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "SelectionPages"
        ],
        "summary": "Create a new product selection page",
        "operationId": "CreateSelectionPageAsync",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/SelectionPageAddDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the new product selection page.",
            "schema": {
              "$ref": "#/definitions/SelectionPageDto"
            }
          },
          "409": {
            "description": "Returned when there is a conflict with another product selection page.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/api/v1/selectionpages/{id}": {
      "get": {
        "tags": [
          "SelectionPages"
        ],
        "summary": "Get product selection page with id as parameter",
        "operationId": "GetSelectionPageByIdAsync",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the product selection page.",
            "schema": {
              "$ref": "#/definitions/SelectionPageDto"
            }
          },
          "404": {
            "description": "Returned when the product selection page was not found.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "400": {
            "description": "Returned when request can not be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "SelectionPages"
        ],
        "summary": "Update a product selection page",
        "operationId": "UpdateSelectionPageAsync",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/SelectionPageUpdateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the full information about the product selection page.",
            "schema": {
              "$ref": "#/definitions/SelectionPageDto"
            }
          },
          "404": {
            "description": "Returned when the product selection page was not found.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "409": {
            "description": "Returned when there is a conflict with another product selection page.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "SelectionPages"
        ],
        "summary": "Delete a product selection page",
        "operationId": "DeleteSelectionPageAsync",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned with the deleted menu category.",
            "schema": {
              "$ref": "#/definitions/SelectionPageDto"
            }
          },
          "409": {
            "description": "Returned when the category is not empty.",
            "schema": {
              "$ref": "#/definitions/ErrorResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "CustomAttributeAddDto": {
      "description": "DTO for adding a custom attribute",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name",
          "type": "string"
        },
        "idName": {
          "description": "Id as a name",
          "type": "string"
        },
        "typeName": {
          "description": "Typename",
          "type": "string"
        },
        "enabled": {
          "description": "Enabled",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "CustomAttributeDto": {
      "description": "DTO for Custom attributes",
      "required": [
        "enabled",
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "Id",
          "type": "string"
        },
        "name": {
          "description": "Name",
          "type": "string"
        },
        "idName": {
          "description": "Id as a name",
          "type": "string"
        },
        "typeName": {
          "description": "Typename",
          "type": "string"
        },
        "enabled": {
          "description": "Enabled",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "CustomAttributeUpdateDto": {
      "description": "DTO for adding a custom attribute",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name",
          "type": "string"
        },
        "typeName": {
          "description": "Typename",
          "type": "string"
        },
        "enabled": {
          "description": "Enabled",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "DustCategoryAddDto": {
      "description": "DTO for adding a dust category",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name",
          "type": "string"
        },
        "weight": {
          "format": "int32",
          "description": "Weight (order)",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "DustCategoryDto": {
      "description": "DTO for Dust category",
      "required": [
        "id",
        "weight"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "Id",
          "type": "string"
        },
        "name": {
          "description": "Name",
          "type": "string"
        },
        "weight": {
          "format": "int32",
          "description": "Weight (order)",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "DustCategoryUpdateDto": {
      "description": "DTO for updating a dust category",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name",
          "type": "string"
        },
        "weight": {
          "format": "int32",
          "description": "Weight (order)",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "ErrorResultDto": {
      "type": "object",
      "properties": {
        "statusCode": {
          "$ref": "#/definitions/HttpStatusCode"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "errorCode": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "HttpStatusCode": {
      "enum": [
        "Continue",
        "SwitchingProtocols",
        "Processing",
        "EarlyHints",
        "OK",
        "Created",
        "Accepted",
        "NonAuthoritativeInformation",
        "NoContent",
        "ResetContent",
        "PartialContent",
        "MultiStatus",
        "AlreadyReported",
        "IMUsed",
        "MultipleChoices",
        "MovedPermanently",
        "Found",
        "SeeOther",
        "NotModified",
        "UseProxy",
        "Unused",
        "TemporaryRedirect",
        "PermanentRedirect",
        "BadRequest",
        "Unauthorized",
        "PaymentRequired",
        "Forbidden",
        "NotFound",
        "MethodNotAllowed",
        "NotAcceptable",
        "ProxyAuthenticationRequired",
        "RequestTimeout",
        "Conflict",
        "Gone",
        "LengthRequired",
        "PreconditionFailed",
        "RequestEntityTooLarge",
        "RequestUriTooLong",
        "UnsupportedMediaType",
        "RequestedRangeNotSatisfiable",
        "ExpectationFailed",
        "MisdirectedRequest",
        "UnprocessableEntity",
        "Locked",
        "FailedDependency",
        "UpgradeRequired",
        "PreconditionRequired",
        "TooManyRequests",
        "RequestHeaderFieldsTooLarge",
        "UnavailableForLegalReasons",
        "InternalServerError",
        "NotImplemented",
        "BadGateway",
        "ServiceUnavailable",
        "GatewayTimeout",
        "HttpVersionNotSupported",
        "VariantAlsoNegotiates",
        "InsufficientStorage",
        "LoopDetected",
        "NotExtended",
        "NetworkAuthenticationRequired"
      ],
      "type": "string"
    },
    "MeasureMethod": {
      "enum": [
        "None",
        "Count",
        "Weigh"
      ],
      "type": "string"
    },
    "MenuCategoryAddDto": {
      "description": "DTO for adding a Menu category",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name",
          "type": "string"
        },
        "weight": {
          "format": "int32",
          "description": "Weight (order)",
          "type": "integer"
        },
        "idName": {
          "description": "Id as a name",
          "type": "string"
        },
        "enabled": {
          "description": "Enabled",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "MenuCategoryDto": {
      "description": "DTO for Menu category",
      "required": [
        "enabled",
        "id",
        "weight"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "Id",
          "type": "string"
        },
        "name": {
          "description": "Name",
          "type": "string"
        },
        "weight": {
          "format": "int32",
          "description": "Weight (order)",
          "type": "integer"
        },
        "idName": {
          "description": "Id as a name",
          "type": "string"
        },
        "enabled": {
          "description": "Enabled",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "MenuCategoryUpdateDto": {
      "description": "DTO for updating a Menu category",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name",
          "type": "string"
        },
        "weight": {
          "format": "int32",
          "description": "Weight (order)",
          "type": "integer"
        },
        "enabled": {
          "description": "Enabled",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "ProductAddDto": {
      "description": "DTO to add a product",
      "type": "object",
      "properties": {
        "productCategoryId": {
          "format": "uuid",
          "description": "Product category",
          "type": "string"
        },
        "dustCategoryId": {
          "format": "uuid",
          "description": "Dust category",
          "type": "string"
        },
        "menuCategoryId": {
          "format": "uuid",
          "description": "Menu category",
          "type": "string"
        },
        "code": {
          "description": "Product code",
          "type": "string"
        },
        "name": {
          "description": "Product name",
          "type": "string"
        },
        "menuName": {
          "description": "Alternative name on menu",
          "type": "string"
        },
        "vatLevel": {
          "$ref": "#/definitions/VatLevel"
        },
        "description": {
          "description": "Long description",
          "type": "string"
        },
        "inInventory": {
          "description": "Should be included in inventory",
          "type": "boolean"
        },
        "percentage": {
          "format": "float",
          "description": "Amount of softdrugs for use in stock measurement",
          "type": "number"
        },
        "ascendingStock": {
          "description": "Stock goes up on use (coffee machine counter)",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/RecordState"
        },
        "customAttributes": {
          "description": "Custom attributes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductCustomAttributeDto"
          }
        },
        "variations": {
          "description": "Variations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductVariationAddDto"
          }
        },
        "selectionPages": {
          "description": "Selection pages",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductSelectionPageReferenceDto"
          }
        }
      },
      "additionalProperties": false
    },
    "ProductCategoryAddDto": {
      "description": "DTO for adding product categories",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name",
          "type": "string"
        },
        "weight": {
          "format": "int32",
          "description": "Weight (order)",
          "type": "integer"
        },
        "idName": {
          "description": "Id as a name",
          "type": "string"
        },
        "measureMethod": {
          "$ref": "#/definitions/MeasureMethod"
        },
        "defaultForeColor": {
          "description": "Default foreground color for new products",
          "type": "string"
        },
        "defaultBackColor": {
          "description": "Default background color for new products",
          "type": "string"
        },
        "enabled": {
          "description": "Enabled",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "ProductCategoryDto": {
      "description": "DTO for the product category",
      "required": [
        "enabled",
        "id",
        "measureMethod",
        "weight"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "Id",
          "type": "string"
        },
        "name": {
          "description": "Name",
          "type": "string"
        },
        "weight": {
          "format": "int32",
          "description": "Weight (order)",
          "type": "integer"
        },
        "idName": {
          "description": "Id as a name",
          "type": "string"
        },
        "measureMethod": {
          "$ref": "#/definitions/MeasureMethod"
        },
        "defaultForeColor": {
          "description": "Default foreground color for new products",
          "type": "string"
        },
        "defaultBackColor": {
          "description": "Default background color for new products",
          "type": "string"
        },
        "enabled": {
          "description": "Enabled",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "ProductCategoryUpdateDto": {
      "description": "DTO for updating product categories",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name",
          "type": "string"
        },
        "weight": {
          "format": "int32",
          "description": "Weight (order)",
          "type": "integer"
        },
        "measureMethod": {
          "$ref": "#/definitions/MeasureMethod"
        },
        "defaultForeColor": {
          "description": "Default foreground color for new products",
          "type": "string"
        },
        "defaultBackColor": {
          "description": "Default background color for new products",
          "type": "string"
        },
        "enabled": {
          "description": "Enabled",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "ProductCustomAttributeDto": {
      "description": "Custom attribute instance in a product",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "Custom attribute id",
          "type": "string"
        },
        "value": {
          "description": "Custom attribute value",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ProductDto": {
      "description": "DTO for products",
      "required": [
        "ascendingStock",
        "created",
        "dustCategoryId",
        "id",
        "inInventory",
        "menuCategoryId",
        "percentage",
        "productCategoryId",
        "state",
        "vatLevel"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "Id",
          "type": "string"
        },
        "productCategoryId": {
          "format": "uuid",
          "description": "Product category",
          "type": "string"
        },
        "dustCategoryId": {
          "format": "uuid",
          "description": "Dust category",
          "type": "string"
        },
        "menuCategoryId": {
          "format": "uuid",
          "description": "Menu category",
          "type": "string"
        },
        "code": {
          "description": "Product code",
          "type": "string"
        },
        "name": {
          "description": "Product name",
          "type": "string"
        },
        "menuName": {
          "description": "Alternative name on menu",
          "type": "string"
        },
        "vatLevel": {
          "$ref": "#/definitions/VatLevel"
        },
        "description": {
          "description": "Long description",
          "type": "string"
        },
        "inInventory": {
          "description": "Should be included in inventory",
          "type": "boolean"
        },
        "percentage": {
          "format": "float",
          "description": "Amount of softdrugs for use in stock measurement",
          "type": "number"
        },
        "ascendingStock": {
          "description": "Stock goes up on use (coffee machine counter)",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/RecordState"
        },
        "created": {
          "format": "date-time",
          "description": "Datetime created",
          "type": "string"
        },
        "userCreate": {
          "description": "User that created the product",
          "type": "string"
        },
        "updated": {
          "format": "date-time",
          "description": "Datetime last update",
          "type": "string"
        },
        "userUpdate": {
          "description": "User last update",
          "type": "string"
        },
        "customAttributes": {
          "description": "Custom attributes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductCustomAttributeDto"
          }
        },
        "variations": {
          "description": "Variations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductVariationAddDto"
          }
        }
      },
      "additionalProperties": false
    },
    "ProductSelectionPageReferenceDto": {
      "description": "",
      "type": "object",
      "properties": {
        "selectionPageId": {
          "format": "uuid",
          "type": "string"
        },
        "foreColor": {
          "type": "string"
        },
        "backColor": {
          "type": "string"
        },
        "rowIdx": {
          "format": "int32",
          "type": "integer"
        },
        "columnIdx": {
          "format": "int32",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "ProductStatus": {
      "enum": [
        "None",
        "Activated",
        "Deactivating",
        "Deactivated",
        "Deleted"
      ],
      "type": "string"
    },
    "ProductUpdateDto": {
      "description": "DTO to update a product",
      "type": "object",
      "properties": {
        "productCategoryId": {
          "format": "uuid",
          "description": "Product category",
          "type": "string"
        },
        "dustCategoryId": {
          "format": "uuid",
          "description": "Dust category",
          "type": "string"
        },
        "menuCategoryId": {
          "format": "uuid",
          "description": "Menu category",
          "type": "string"
        },
        "code": {
          "description": "Product code",
          "type": "string"
        },
        "name": {
          "description": "Product name",
          "type": "string"
        },
        "menuName": {
          "description": "Alternative name on menu",
          "type": "string"
        },
        "vatLevel": {
          "$ref": "#/definitions/VatLevel"
        },
        "description": {
          "description": "Long description",
          "type": "string"
        },
        "inInventory": {
          "description": "Should be included in inventory",
          "type": "boolean"
        },
        "percentage": {
          "format": "float",
          "description": "Amount of softdrugs for use in stock measurement",
          "type": "number"
        },
        "ascendingStock": {
          "description": "Stock goes up on use (coffee machine counter)",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/RecordState"
        },
        "customAttributes": {
          "description": "Custom attributes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductCustomAttributeDto"
          }
        },
        "variations": {
          "description": "Variations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductVariationUpdateDto"
          }
        },
        "selectionPages": {
          "description": "Selection pages",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductSelectionPageReferenceDto"
          }
        }
      },
      "additionalProperties": false
    },
    "ProductVariationAddDto": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "productVariationLocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductVariationLocationReferenceDto"
          }
        }
      },
      "additionalProperties": false
    },
    "ProductVariationLocationReferenceDto": {
      "type": "object",
      "properties": {
        "locationId": {
          "format": "uuid",
          "type": "string"
        },
        "unitPrice": {
          "format": "float",
          "type": "number"
        },
        "unitPricePurchase": {
          "format": "float",
          "type": "number"
        },
        "showOnFavoritePage": {
          "type": "boolean"
        },
        "minAmount": {
          "format": "float",
          "type": "number"
        },
        "maxAmount": {
          "format": "float",
          "type": "number"
        },
        "transport": {
          "format": "float",
          "type": "number"
        },
        "status": {
          "$ref": "#/definitions/ProductStatus"
        },
        "nextStatus": {
          "$ref": "#/definitions/ProductStatus"
        },
        "changeDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "onMenuStart": {
          "format": "time",
          "type": "string"
        },
        "onMenuEnd": {
          "format": "time",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ProductVariationUpdateDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "sku": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "productVariationLocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductVariationLocationReferenceDto"
          }
        }
      },
      "additionalProperties": false
    },
    "RecordState": {
      "enum": [
        "Active",
        "Inactive",
        "Deleted"
      ],
      "type": "string"
    },
    "SelectionPageAddDto": {
      "description": "DTO for adding a product selection page",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name",
          "type": "string"
        },
        "weight": {
          "format": "int32",
          "description": "Weight (order)",
          "type": "integer"
        },
        "idName": {
          "description": "Id as a name",
          "type": "string"
        },
        "enabled": {
          "description": "Enabled",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "SelectionPageDto": {
      "description": "DTO for product selection page",
      "required": [
        "enabled",
        "id",
        "weight"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "Id",
          "type": "string"
        },
        "name": {
          "description": "Name",
          "type": "string"
        },
        "weight": {
          "format": "int32",
          "description": "Weight (order)",
          "type": "integer"
        },
        "idName": {
          "description": "Id as a name",
          "type": "string"
        },
        "enabled": {
          "description": "Enabled",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "SelectionPageUpdateDto": {
      "description": "DTO for updating a product selection page",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name",
          "type": "string"
        },
        "weight": {
          "format": "int32",
          "description": "Weight (order)",
          "type": "integer"
        },
        "enabled": {
          "description": "Enabled",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "VatLevel": {
      "enum": [
        "None",
        "Low",
        "High"
      ],
      "type": "string"
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://auth.juliapos.eu/connect/authorize",
      "tokenUrl": "https://auth.juliapos.eu/connect/token",
      "scopes": {
        "openid": "openid",
        "demo": "demo"
      }
    }
  },
  "security": [
    {
      "oauth2": [ ]
    }
  ]
}